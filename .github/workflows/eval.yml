name: Evaluate LLM
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - data/*
      - src/*

permissions:
  id-token: write
  contents: read

jobs:
  evaluate:
    runs-on: ubuntu-latest
    env:
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      AZURE_OPENAI_LLM_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_LLM_DEPLOYMENT }}
      AZURE_OPENAI_JUDGE_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_JUDGE_DEPLOYMENT }}
      AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
      # GENAI_EVALS_CONFIG_PATH: ${{ github.workspace }}/evaluate-config.json
      # GENAI_EVALS_DATA_PATH: ${{ github.workspace }}/.github/.test_files/eval-input.jsonl
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.OIDC_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.OIDC_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.OIDC_AZURE_SUBSCRIPTION_ID }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r src/requirements.txt

      - name: Run LLM Evaluation
        id: evaluation
        run: |
          echo "Running LLM evaluation..."
          python src/evaluation.py > evaluation_output.txt 2>&1

          # Extract the JSON results section
          echo "## Extracting JSON results..."
          sed -n '/JSON RESULTS FOR GITHUB ACTIONS/,$ p' evaluation_output.txt | sed '1,2d' > evaluation_results.json

          # Extract the GitHub summary section
          echo "## Extracting GitHub summary..."
          sed -n '/GITHUB ACTIONS SUMMARY/,/JSON RESULTS FOR GITHUB ACTIONS/ p' evaluation_output.txt | sed '1,2d' | sed '$d' > github_summary.md

          # Display the full output
          echo "## Full Evaluation Output:"
          cat evaluation_output.txt

          # Set outputs for use in subsequent steps
          echo "evaluation_completed=true" >> $GITHUB_OUTPUT

      - name: Create Job Summary
        if: steps.evaluation.outputs.evaluation_completed == 'true'
        run: |
          echo "## LLM Evaluation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f github_summary.md ]; then
            cat github_summary.md >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ GitHub summary not found" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### JSON Results" >> $GITHUB_STEP_SUMMARY
          echo "```json" >> $GITHUB_STEP_SUMMARY

          if [ -f evaluation_results.json ]; then
            cat evaluation_results.json >> $GITHUB_STEP_SUMMARY
          else
            echo "JSON results not found" >> $GITHUB_STEP_SUMMARY
          fi

          echo "```" >> $GITHUB_STEP_SUMMARY